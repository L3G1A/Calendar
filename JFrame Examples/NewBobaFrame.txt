package shop;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;

public class NewBobaFrame extends JFrame
{
	private JLabel instructions;
	private JComboBox<String> sizes;
	private JComboBox<String> teaspoons;
	private JComboBox<String> milkBase;
	private JComboBox<String> baseTea;
	private JButton cancelButton;
	private JTextField instructionField;
	private JButton saveButton;
	private JCheckBox boba;
	private JCheckBox poppingBoba;
	private JCheckBox grassJelly;
	private JCheckBox lycheeJelly;
	private JCheckBox coconutJelly;
	private JCheckBox miniMochi;

	public NewBobaFrame() {
		createComponents();
		this.setTitle("New Coffee Order");
		this.setSize(800, 400);
	}

	private void createComponents() {
		instructions = new JLabel("Please specify the following: ");
		String[] s = {"S", "M" ,"L"};
		sizes = new JComboBox<String>(s);
		String[] tea = {"Green Tea", "Black Tea" ,"Jasmine Green Tea","Rose Tea","Oolong Tea"};
		baseTea = new JComboBox<String>(tea);
		String[] numTeaspoons = {"1", "2", "3", "4"};
		teaspoons = new JComboBox<String>(numTeaspoons);
		String[] bases = {"Whole Milk", "Half-and-Half", "No Milk"};
		milkBase = new JComboBox<String>(bases);
		instructionField = new JTextField(50);
		saveButton = new JButton("Save Order");
		cancelButton = new JButton("Cancel");
		ActionListener saveListener = new SaveButtonListener();
		saveButton.addActionListener(saveListener); //adding reaction instructions
		//to our button
		ActionListener cancelListener = new CancelButtonListener();
		cancelButton.addActionListener(cancelListener);
		
		boba = new JCheckBox("Boba");
		poppingBoba = new JCheckBox("Popping Boba");
		grassJelly = new JCheckBox("Grass Jelly");
		lycheeJelly = new JCheckBox("Luchee Jelly");
		coconutJelly = new JCheckBox("Coconut Jelly");
		miniMochi = new JCheckBox("Mini Mochi");
		
		JPanel panel = new JPanel();
		panel.add(instructions);
		panel.add(sizes); //dd menu for sizes added to panel
		panel.add(teaspoons); //dd menu for # of teaspoons added to panel
		panel.add(milkBase);
		panel.add(baseTea);
		panel.add(boba);
		panel.add(poppingBoba);
		panel.add(grassJelly);
		panel.add(lycheeJelly);
		panel.add(coconutJelly);
		panel.add(miniMochi);
		panel.add(instructionField);
		panel.add(saveButton);
		panel.add(cancelButton);
		
		
		this.add(panel);//adding the panel to this frame
		
	}
	
	
	//INNER CLASS EVENT LISTENER
	class SaveButtonListener implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent click) {
			//close this frame but not the program on click
			//the parameter e of the type ActionEvent refers to the 
			//actual click
			List<String> toppings = new ArrayList<String> ();  
			if(poppingBoba.isSelected()) {
				toppings.add("Popping Boba");
			}
			if(boba.isSelected()) {
				toppings.add("boba");
			}
			if(grassJelly.isSelected()) {
				toppings.add("Grass Jelly");
			}
			if(lycheeJelly.isSelected()) {
				toppings.add("Lychee Jelly");
			}
			if(coconutJelly.isSelected()) {
				toppings.add("Coconut Jelly");
			}
			if(miniMochi.isSelected()) {
				toppings.add("Mini Mochi");
			}
			BobaDrink boba = new 	BobaDrink("Boba", (String)teaspoons.getSelectedItem(), (String)sizes.getSelectedItem(), (String)milkBase.getSelectedItem(), toppings, (String)baseTea.getSelectedItem(), instructionField.getText());
			newDrink.displayString += (boba.toString() + "\n");
			newDrink.textArea.setText("");
			newDrink.textArea.append(newDrink.displayString);
			newDrink.drinkCost += boba.getCost();
			double displayCost = newDrink.drinkCost + newDrink.pastryCost;
			newDrink.textArea.append("Total Cost: " + displayCost);
			newDrink.textArea.append("Tax of 10%" + (displayCost * .1));
			double taxCost = displayCost+(displayCost * .1);
			newDrink.textArea.append("Final Cost: " + taxCost);
			//returns the event source i.e. the button component
			//i.e. the one responsible for the event
			Component b = (Component) click.getSource(); //e.getSource() returns Object 
			
			//we want the button because we want to know in which frame
			//the button is located.  That way, we can close that frame
			
			//this is getting the frame that contains the button
			JFrame c = (JFrame) SwingUtilities.getRoot(b);
			
			//setting visibility to false
			c.setVisible(false);
			
			
			
		}
		
	}
	class CancelButtonListener implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent click) {
			//close this frame but not the program on click
			//the parameter e of the type ActionEvent refers to the 
			//actual click
			//returns the event source i.e. the button component
			//i.e. the one responsible for the event
			Component b = (Component) click.getSource(); //e.getSource() returns Object 
			
			//we want the button because we want to know in which frame
			//the button is located.  That way, we can close that frame
			
			//this is getting the frame that contains the button
			JFrame c = (JFrame) SwingUtilities.getRoot(b);
			
			//setting visibility to false
			c.setVisible(false);
			
			
			
		}
		
	}
}
